{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","styles","section","sectionTitle","FeedbackOptions","options","onLeaveFeedback","buttonStyle","Object","keys","map","key","type","button","id","onClick","e","slice","toUpperCase","toLowerCase","Statistics","good","bad","neutral","total","positivePercentage","Notification","message","App","state","feedbackHandler","setState","prevState","buttonId","target","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","feedbacksTotalAmount","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAeeA,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOE,aAAtB,SAAqCL,IACpCC,M,gBCkBQK,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKN,UAAWC,IAAOM,YAAvB,SACMC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAG,OAC9B,wBAEEC,KAAK,SACLZ,UAAWC,IAAOY,OAClBC,GAAIH,EACJI,QAAS,SAAAC,GAAC,OAAIV,EAAgBU,IALhC,SAOGL,EAAIM,MAAM,EAAG,GAAGC,cAAgBP,EAAIM,MAAM,GAAGE,eANzCR,SC+BCS,MArCf,YAMG,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAcE,OAEhB,6BACE,sCAAUD,OAEZ,6BACE,wCAAYE,OAEd,6BACE,oDACsBC,EADtB,aCfOC,MAPf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KCGOC,E,4MACnBC,MAAQ,CAAER,KAAM,EAAGE,QAAS,EAAGD,IAAK,G,EAEpCQ,gBAAkB,SAAAd,GAChB,EAAKe,UAAS,SAAAC,GACZ,IAAMC,EAAWjB,EAAEkB,OAAOpB,GAC1B,OAAO,eACJmB,EAAWD,EAAUC,GAAY,O,EAKxCE,mBAAqB,kBACnB3B,OAAO4B,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,IAAM,EAAKP,qBAAwB,EAAKN,MAAMR,O,uDAGzD,IAAD,EACwBsB,KAAKd,MAA5BR,EADD,EACCA,KAAME,EADP,EACOA,QAASD,EADhB,EACgBA,IACjBsB,EAAuBD,KAAKR,qBAClC,OACE,qCACE,cAAC,EAAD,CAASrC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAASsC,KAAKd,MACdvB,gBAAiBqC,KAAKb,oBAG1B,eAAC,EAAD,CAAShC,MAAM,aAAf,UAC4B,IAAzB8C,GACC,cAAC,EAAD,CAAcjB,QAAQ,sBAGvBiB,EAAuB,GACtB,cAAC,EAAD,CACEvB,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOoB,EACPnB,mBAAoBkB,KAAKH,8C,GAzCNK,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,kBCApED,EAAOC,QAAU,CAAC,YAAc,qCAAqC,OAAS,mC","file":"static/js/main.2ded308c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.sectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.buttonStyle}>\n         {Object.keys(options).map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          className={styles.button}\n          id={key}\n          onClick={e => onLeaveFeedback(e)}\n        >\n          {key.slice(0, 1).toUpperCase() + key.slice(1).toLowerCase()}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\n\n function Statistics({\n  good,\n  bad,\n  neutral,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul>\n      <li>\n        <p>Good: {good}</p>\n      </li>\n      <li>\n        <p >Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p >Bad: {bad}</p>\n      </li>\n      <li>\n        <p >Total: {total}</p>\n      </li>\n      <li>\n        <p>\n          Positive feedback: {positivePercentage}%\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default  Statistics;","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <h3>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;","import  { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  feedbackHandler = e => {\n    this.setState(prevState => {\n      const buttonId = e.target.id;\n      return {\n        [buttonId]: prevState[buttonId] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((100 / this.countTotalFeedback()) * this.state.good);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const feedbacksTotalAmount = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {feedbacksTotalAmount === 0 && (\n            <Notification message=\"No feedback given\" />\n          )}\n\n          {feedbacksTotalAmount > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={feedbacksTotalAmount}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__t5jAi\",\"sectionTitle\":\"Section_sectionTitle__1_eqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"FeedbackOptions_buttonStyle__CBy4X\",\"button\":\"FeedbackOptions_button__3Vj8y\"};"],"sourceRoot":""}